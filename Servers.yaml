AWSTemplateFormatVersion: '2010-09-09'
Description: Auto Scaling Group with EC2 instances in private subnets

# Defining parameters
Parameters:
  LaunchTemplateName:
    Type: String
    Description: Name of the EC2 Launch Template
    Default: TweetServers

  NetworkStackName:
    Type: String
    Description: Name of the network stack
    Default: NetworkStack

  KeyPairName:
    Description: Key pair name for SSH access
    Type: AWS::EC2::KeyPair::KeyName

  SecurityGroupsStackName:
    Type: String
    Description: Name of the security groups stack
    Default: SecurityGroupsStack

  ALBListenerPort:
    Type: Number
    Description: Port for the ALB listener
    Default: 80
  
  EBSVolumeSize:
    Type: Number
    Description: Size of the additional EBS volume in GiB
    Default: 20
    MinValue: 1
    MaxValue: 16384

Resources:

  # IAM Role for EC2 Instances
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Path: /

  # IAM Instance Profile
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2InstanceRole

  # Initiating EC2 linux instances
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Ref LaunchTemplateName
      LaunchTemplateData:
        InstanceType: t3.micro
        ImageId: ami-05edb7c94b324f73c  # Amazon Linux 2023
        KeyName: !Ref KeyPairName
        SecurityGroupIds:
          - !ImportValue InstanceSecurityGroupId
        IamInstanceProfile:
          Name: !Ref EC2InstanceProfile
        BlockDeviceMappings:
          - DeviceName: /dev/xvda  # Root volume
            Ebs:
              VolumeType: gp3
              VolumeSize: 20
              Encrypted: true
              DeleteOnTermination: true
          - DeviceName: /dev/xvdf  # Additional data volume
            Ebs:
              VolumeType: gp3
              VolumeSize: !Ref EBSVolumeSize
              Encrypted: true
              DeleteOnTermination: true
        UserData:
          Fn::Base64: 
            !Sub |
              #!/bin/bash
              # Update system
              yum update -y

              # Install dependencies
              yum install -y httpd awscli

              # Configure additional EBS volume
              DEVICE="/dev/xvdf"
              MOUNT_POINT="/mnt/data"

              # Check if the device exists
              if [ -b $DEVICE ]; then
                # Create filesystem if not already created
                if ! blkid $DEVICE; then
                  mkfs -t ext4 $DEVICE
                fi

                # Create mount point
                mkdir -p $MOUNT_POINT

                # Add to fstab
                echo "$DEVICE $MOUNT_POINT ext4 defaults,nofail 0 2" >> /etc/fstab

                # Mount the volume
                mount -a
              fi

              # Start and enable web server
              systemctl start httpd
              systemctl enable httpd

              # Create sample index page
              echo "<h1>Hello from Tweet App Server</h1>" > /var/www/html/index.html
              echo "<p>Additional data volume mounted at $MOUNT_POINT</p>" >> /var/www/html/index.html

  # Creating scaling group containing the 2 EC2 instances
  TweetAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: TweetAutoScalingGroup
      MinSize: 2
      MaxSize: 2
      DesiredCapacity: 2
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !ImportValue PrivateSubnet1Id
        - !ImportValue PrivateSubnet2Id
      TargetGroupARNs:
        - !Ref ALBTargetGroup
      Tags:
        - Key: Name
          Value: TweetAutoScalingInstance
          PropagateAtLaunch: true

  # Application Load Balancer (ALB)
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: TweetALB
      Scheme: internet-facing
      Subnets:
        - !ImportValue PublicSubnet1Id
        - !ImportValue PublicSubnet2Id
      SecurityGroups:
        - !ImportValue ALBSecurityGroupId
      Tags:
        - Key: Name
          Value: TweetALB

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: !Ref ALBListenerPort
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: TweetTargetGroup
      VpcId: !ImportValue VPCId
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthCheckEnabled: true
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3

Outputs:
  AutoScalingGroupId:
    Description: The ID of the Auto Scaling Group
    Value: !Ref TweetAutoScalingGroup

  LaunchTemplateId:
    Description: The ID of the Launch Template
    Value: !Ref LaunchTemplate

  ALBArn:
    Description: The ARN of the Application Load Balancer
    Value: !Ref ApplicationLoadBalancer

  ALBListenerArn:
    Description: The ARN of the ALB Listener
    Value: !Ref ALBListener

  TargetGroupArn:
    Description: The ARN of the Target Group
    Value: !Ref ALBTargetGroup